'use strict';

const _path = require('path');
let _ajv = require('ajv');

/**
 * A module containing utility functions for argument validation.
 */
const argUtils = {
    /**
     * Returns a function that is tied to a specific schema, and can be used
     * to perform argument validations based on the defined schema.
     * 
     * @param {Object} schema The schema to use when performing checks.
     * @param {String} [message='Schema validation failed'] The error message to
     *        prepend to any errors generated by this method
     *
     * @return {Function(target, callback)} A validation function that takes
     *        an object argument and invokes the callback with errors if
     *        the argument fails schema validation.
     */
    buildSchemaChecker: function(schema, message) {
        if (!schema || (schema instanceof Array) || typeof schema !== 'object') {
            throw new Error('Invalid schema specified (arg #1)');
        }
        if (typeof message !== 'string') {
            message = 'Schema validation failed';
        }
        const schemaValidator = _ajv().compile(schema);
        return (target) => {
            if (!schemaValidator(target)) {
                const schemaErr = schemaValidator.errors[0];
                const error = new Error(`[SchemaError] ${message}. Details: [${schemaErr.dataPath||'<root>'}: ${schemaErr.message}]`);
                return error;
            }
            return false;
        };
    }
};

module.exports = argUtils;
